CSC D84 - Artificial Intelligence, Unit 1 - Search

________________________________________________

Student Name 1 (last, first): Nevin

Student Name 2 (last, first):

Student number 1: 

Student number 2:

UTORid 1:

UTORid 2:

READ THIS AND SIGN YOUR NAME AT THE END:

 I certify that I have read the UTSC code on academic
honesty and plaguarism. All work submitted as part
of this assignment is my own.

	Signed: _Nevin_(student 2 name here)__


(-2.5 marks for failing to provide the identifying
 information requested above)
________________________________________________

Answer the following questions. Be concise and clear
but explain carefully when needed.

1 .- (1 marks) Of BFS and DFS, which search algorithm yields the best results? (i.e. which is more likely
     to get the mouse to the cheese safely before being eaten?)

BFS yields better results. BFS would find a goal state in less steps, and generate a more efficient path than DFS.

2 .- (1 marks) Does this mean that in general BFS is a better search algorithm? (yes/no and give reasons to
     support your answer based on your observations)

BFS is better in this case, but this doesn't generalize to other problems. For example, if the goal node is many levels deep in a graph, DFS may be more efficient.

3 .- (2 marks) Describe the heuristic function you used for A* search. Why is this heuristic admissible?

The heuristic fuction h(n) is essentially the shortest Manhattan distance from the location to any cheese on the map. This heuristic is admissible because firstly, it will surely be non-negative. Secondly, take h*(n), the true cost of getting to a cheese on the map. If we suppose that h(n) is greater than h*(n), h*(n) would be a SHORTER Manhattan distance from n to a cheese, contradicting the definition of h(n). So h(n) <= h*(n), and the heuristic is admissible.

4 .- (1 marks) Explain how your heuristic function accounts for the presence of multiple cheese.

It accounts for multiple cheese by being the shortest Manhattan distance from the location to ANY cheese on the map. So all the Manhattan distances are calculated, and the shortest one is taken to be the heuristic.

5 .- (1 marks) Is A* equivalent to BFS for this problem? or is it better/worse? explain your answer based on your observations.

A* is better than BFS for this problem. From my observations, A* searched in directions/locations that were closer to cheese, and would more likely lead to cheese. BFS would unecessarily search in directions that would not, it didn't have a general sense of where it should search.

6 .- (2 marks) Describe your heuristic function for A*-nokitty. How does it work? what factors are considered
     into the cost function? is it admissible (yes/no and why)?

The heuristic function h(n) is the shortest Manhattan distance from the location to any cheese on the map, minus two times the shortest Manhattan distance to any cat on the map. This makes the location being FARTHER from the nearest cat better (lower h(n)) and CLOSER to the nearest cat worse (higher h(n)). Additionally, it also makes the location being CLOSER to the nearest cheese better and FARTHER to the nearest cheese worse. Multiplying the cat's distance by two the is to place more importance on avoiding the cat, than pathing to the cheese. Though, this heuristic is inadmissible since h(n) can be negative. (For example, both the nearest cat and cheese are 5 units away in terms of Manhattan distance, h(n) = 5 - 2*5 = -5.)

7 .- (2 marks) What is the largest limitation of the search algorithms implemented in this assignment?
     (i.e. is there anything we are missing that could lead to a smarter mouse?) - this is
     a more or less open question, but we talked about it in lecture!

The largest limitation is that the search algorithms only consider the current state (since the code is only called every frame) of the map, and don't take into account past states, and doesn't think ahead about future potential states. The cats and cheeses can move, but the algorithms never consider where they may go next. Considering past and future states can lead to a smarter mouse that can path toward locations that have less chance of getting eaten.

Mark with an 'x' where appropriate. If something is only working partially, briefly describe what works, what
doesn't work, or what problems exist.
	
		Complete/Working	Partial		Not done

DFS                     x

BFS                     x

A*                      x

H                       x

H_no_cats               x

_____________________________________________________

Marking:

(2.5 marks) Working implementation of BFS

(2.5 marks) Working implementation of DFS

(5 marks)  A* heuristic function is implemented, reasonable,
           and admissible.

(2.5 marks) Working implementation of A* (using your heuristic)

(5 marks) Implemented a **clever**  A*-nokitty heuristic
          and a working A*-nokitty search. The search
          should produce a smarter mouse than all of
          BFS/DFS/A*.

          The heuristic should account for known game 
          factors that affect the mouse's chance of success.

(10 marks) Answers in this report file

(up to 10 marks) Assigned by the TA based on how smart your
		 mouse actually is in the no-kitty mode. 
         Mind what is going on in
		 the game, and think about how to make your
		 mouse most likely to win!

Total for A1:       / out of 37.5


